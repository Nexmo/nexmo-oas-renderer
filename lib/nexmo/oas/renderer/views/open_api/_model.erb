<div class="Vlt-grid <% if !group['schema'] %> Nxd-api--noborder Vlt-article--reverse<% end %>">
  <div class="Vlt-col Vlt-col--2of3 Nxd-api__docs">
    <div>
      <h2 id="<%= group['name'].parameterize %>" class='Vlt-grey-dark'><%= group['name'] %></h2>
      <p class: "Vlt-grey-darker"><%= group['description']&.render_markdown %></p>

      <% if group['schema'] %>
        <% group['schema'].each do |format, schema| %>
          <div class="js-format" data-format="<%= format %>">
            <%
              if schema['properties']
                properties = schema['properties']
              elsif schema['allOf']
                properties = schema['allOf'].map { |o| o['properties'] }.reduce(&:merge)
              end

              properties = properties.map do |name, definition|
                OasParser::Property.new(self, schema, name, definition)
              end
            %>

            <%= erb :'open_api/_parameters', locals: { parameters: properties, model: true, format: format  } %>
          </div>
        <% end %>
      <% end %>
    </div>
  </div>
  <div class="Vlt-col Vlt-col--1of3 Nxd-api__code">
    <% if group['schema'] %>
      <% group['schema'].each do |format, schema| %>
        <div class="js-format" data-format="<%= format %>">
          <h5>Example Model</h5>
          <%= ResponseParserDecorator.new(schema).html(format, xml_options: schema['xml']) %>
        </div>
      <% end %>
    <% end %>
  </div>
</div>
